.PHONY: check-tools
check-tools:
	@./scripts/check-tools

.PHONY: bundle-update-local
bundle-update-local:
	bundle config set --local path vendor/bundle-local
	bundle update

.PHONY: npm-update-local
npm-update-local:
	./scripts/nvm_exec npm update

.PHONY: update-local
update-local: bundle-update-local npm-update-local

.PHONY: update-local
upgrade-local:
	./scripts/nvm_exec npx npm-check-updates --upgrade
	./scripts/nvm_exec npm update
	bundle outdated

.install-local: Gemfile Gemfile.lock .release-version sqlui.gemspec
	@make check-tools
	./scripts/nvm_exec npm install
	bundle config set --local path vendor/bundle-local
	bundle install
	@touch .install-local

.PHONY: install-local
install-local: .install-local

.PHONY: build-local
build-local: check-tools install-local
	./scripts/build

.PHONY: lint-local
lint-local: check-tools
	bundle exec rubocop
	./scripts/nvm_exec npx eslint client/*.js

.PHONY: lint-fix-local
lint-fix-local: check-tools
	bundle exec rubocop -A
	./scripts/nvm_exec npx eslint client/*.js --fix

.PHONY: mysql-local
mysql-local:
	mysql --protocol=tcp --user=root --password=root $(if $(ARGS),$(ARGS),)

.PHONY: build-and-start-server-local
build-and-start-server-local: build-local
	./scripts/run-in-env $(ENV) -- bundle exec ruby ./bin/sqlui development_config.yml

.PHONY: start-local
start-local: start-db-detached
	./scripts/await-healthy-container sqlui_db
	$(RERUN) -- make build-and-start-server-local

.PHONY: unit-test-local
unit-test-local: build-local
	bundle exec rspec $(if $(ARGS),$(ARGS),spec/app)

.PHONY: watch-unit-test-local
watch-unit-test-local:
	$(RERUN) --dir spec/app make unit-test-local $(if $(ARGS),ARGS=$(ARGS),)

.PHONY: test-local
test-local: build-local start-db-detached start-selenium-detached
	./scripts/await-healthy-container sqlui_db
	./scripts/run-in-env test -- bundle exec rspec $(if $(ARGS),$(ARGS),)

.PHONY: watch-test-local
watch-test-local:
	$(RERUN) --dir spec make test-local $(if $(ARGS),ARGS=$(ARGS),)
